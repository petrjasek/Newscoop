<?php

namespace Newscoop\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class NewscoopEntityFeedbackProxy extends \Newscoop\Entity\Feedback implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function setId($p_id)
    {
        $this->__load();
        return parent::setId($p_id);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setTimeCreated(\DateTime $p_datetime)
    {
        $this->__load();
        return parent::setTimeCreated($p_datetime);
    }

    public function getTimeCreated()
    {
        $this->__load();
        return parent::getTimeCreated();
    }

    public function setTimeUpdated(\DateTime $p_datetime)
    {
        $this->__load();
        return parent::setTimeUpdated($p_datetime);
    }

    public function getTimeUpdated()
    {
        $this->__load();
        return parent::getTimeUpdated();
    }

    public function setUrl($p_url)
    {
        $this->__load();
        return parent::setUrl($p_url);
    }

    public function getUrl()
    {
        $this->__load();
        return parent::getUrl();
    }

    public function setSubject($p_subject)
    {
        $this->__load();
        return parent::setSubject($p_subject);
    }

    public function getSubject()
    {
        $this->__load();
        return parent::getSubject();
    }

    public function setMessage($p_message)
    {
        $this->__load();
        return parent::setMessage($p_message);
    }

    public function getMessage()
    {
        $this->__load();
        return parent::getMessage();
    }

    public function setUser(\Newscoop\Entity\User $p_user)
    {
        $this->__load();
        return parent::setUser($p_user);
    }

    public function getUser()
    {
        $this->__load();
        return parent::getUser();
    }

    public function setSection(\Newscoop\Entity\Section $p_section)
    {
        $this->__load();
        return parent::setSection($p_section);
    }

    public function getSection()
    {
        $this->__load();
        return parent::getSection();
    }

    public function setPublication(\Newscoop\Entity\Publication $p_publication)
    {
        $this->__load();
        return parent::setPublication($p_publication);
    }

    public function getPublication()
    {
        $this->__load();
        return parent::getPublication();
    }

    public function setArticle(\Newscoop\Entity\Article $p_article)
    {
        $this->__load();
        return parent::setArticle($p_article);
    }

    public function getArticle()
    {
        $this->__load();
        return parent::getArticle();
    }

    public function setStatus($status)
    {
        $this->__load();
        return parent::setStatus($status);
    }

    public function getStatus()
    {
        $this->__load();
        return parent::getStatus();
    }

    public function setAttachmentType($attachment_type)
    {
        $this->__load();
        return parent::setAttachmentType($attachment_type);
    }

    public function getAttachmentType()
    {
        $this->__load();
        return parent::getAttachmentType();
    }

    public function setAttachmentId($attachment_id)
    {
        $this->__load();
        return parent::setAttachmentId($attachment_id);
    }

    public function getAttachmentId()
    {
        $this->__load();
        return parent::getAttachmentId();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'user', 'section', 'publication', 'article', 'message', 'url', 'subject', 'status', 'time_created', 'attachment_type', 'attachment_id');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}