<?php

namespace Newscoop\Entity\Proxy;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class NewscoopEntityCommentAcceptanceProxy extends \Newscoop\Entity\Comment\Acceptance implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function setId($p_id)
    {
        $this->__load();
        return parent::setId($p_id);
    }

    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setForum(\Newscoop\Entity\Publication $p_forum)
    {
        $this->__load();
        return parent::setForum($p_forum);
    }

    public function getForum()
    {
        $this->__load();
        return parent::getForum();
    }

    public function setForColumn($p_for_column)
    {
        $this->__load();
        return parent::setForColumn($p_for_column);
    }

    public function getForColumn()
    {
        $this->__load();
        return parent::getForColumn();
    }

    public function setType($p_type)
    {
        $this->__load();
        return parent::setType($p_type);
    }

    public function getType()
    {
        $this->__load();
        return parent::getType();
    }

    public function setSearch($p_search)
    {
        $this->__load();
        return parent::setSearch($p_search);
    }

    public function getSearch()
    {
        $this->__load();
        return parent::getSearch();
    }

    public function setSearchType($p_search_type)
    {
        $this->__load();
        return parent::setSearchType($p_search_type);
    }

    public function getSearchType()
    {
        $this->__load();
        return parent::getSearchType();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'forum', 'for_column', 'type', 'search', 'search_type');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}